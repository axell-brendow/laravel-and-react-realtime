version: "3.1"

services:
  db:
    image: postgres:9.6.18-alpine
    container_name: websockets_db
    restart: unless-stopped
    ports:
      - "54322:5432"
    environment:
      - POSTGRES_DB=${DB_DATABASE}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - websockets_dbdata:/var/lib/mysql
    networks:
      - websockets_network

  redis:
    image: redis:alpine3.12
    container_name: websockets_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - websockets_redisdata:/data
    networks:
      - websockets_network

  app:
    build:
      context: .
      dockerfile: DockerfileAPI
    container_name: websockets_app
    restart: unless-stopped
    ports:
      - "8000:8000"
    volumes:
      - .:/var/www/html
    depends_on:
      - db
      - redis
    networks:
      - websockets_network

  app_websockets:
    image: oanhnn/laravel-echo-server:3.0.0
    container_name: websockets_app_websockets
    working_dir: /var/www/html
    restart: unless-stopped
    ports:
      - "6001:6001"
    volumes:
      - .:/var/www/html
    depends_on:
      - app
    networks:
      - websockets_network

  # web:
  #   image: nginx:alpine
  #   container_name: web
  #   restart: unless-stopped
  #   tty: true
  #   ports:
  #     - "8000:80"
  #     - "3000:443"
  #   volumes:
  #     - ./.docker/nginx/conf.d/default.conf/:/etc/nginx/conf.d/default.conf/
  #     - .:/var/www/html
  #   depends_on:
  #     - app
  #     - app_websockets
  #   networks:
  #     - websockets_network

networks:
  websockets_network:
    driver: bridge

volumes:
  websockets_dbdata:
    driver: local
  websockets_redisdata:
    driver: local
